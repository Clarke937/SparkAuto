@page
@model SparkAuto.Pages.Services.DetailsModel
@{ ViewData["Title"] = "Details";
    Layout = "~/Pages/Shared/_Layout.cshtml"; }



<br />
<div class="container pt-4 pb-2 row">
    <div class="col-6">
        <h2 class="text-info py-2">Service Details</h2>
    </div>
    <div class="col-3 offset-3 text-right py-2">
        <a asp-page="../Services/History" asp-route-carId="@Model.serviceHeader.CarId" class="btn btn-outline-success form-control"> Back to List</a>
    </div>
</div>



<div class="container backgroundWhite">
    <div id="details" class="card">
        <div class="card-header bg-dark text-light ml-0 row container">
            <div class="col-1 text-center pt-3 text-white-50 ">
                <i class="far fa-user fa-2x"></i>
            </div>
            <div class="col-5">
                <label class="text-info">@Model.serviceHeader.Car.ApplicationUser.Name</label><br />
                <label class="text-info">@Model.serviceHeader.Car.ApplicationUser.Email / @Model.serviceHeader.Car.ApplicationUser.PhoneNumber</label><br />

            </div>

            <div class="col-5 text-right">
                <label class="text-info">@Model.serviceHeader.Car.Make @Model.serviceHeader.Car.Model @Model.serviceHeader.Car.Style</label><br />
                <label class="text-info">@Model.serviceHeader.Car.Year </label>
            </div>
            <div class="col-1 text-center pt-3 text-white-50 ">
                <i class="fas fa-car fa-2x"></i>
            </div>
        </div>
        <div class="card-body">
            <div class="row pt-3">

                <div class="col-7">
                    <table class="table table-striped border">
                        <tr class="table-secondary">
                            <th>
                                @Html.DisplayNameFor(m => Model.serviceDetails[0].ServiceName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(m => Model.serviceDetails[0].ServicePrice)
                            </th>

                        </tr>
                        @foreach (var item in Model.serviceDetails)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(m => item.ServiceName)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.ServicePrice)
                                </td>

                            </tr>
                        }
                        <tr style="background-color:#e2fee2">
                            <td colspan="1">
                                <h6 class="text-success">Total Price :</h6>
                            </td>
                            <td colspan="2">
                                <h6 class="text-success">$@Model.serviceHeader.TotalPrice</h6>
                            </td>
                        </tr>

                    </table>
                </div>
                <div class="col-5 px-4 pb-2">
                    <div class="row">
                        <div class="col-3">
                            <label asp-for="serviceHeader.Miles" class="form-control" style="border:none;"></label>
                        </div>
                        <div class="col-9">
                            <input asp-for="serviceHeader.Miles" readonly id="txtMiles" class="form-control" />
                        </div>
                    </div>
                    <div class="row py-2">
                        <div class="col-12">
                            <textarea placeholder="Comments..." readonly asp-for="serviceHeader.Details" class="form-control" style="height:100px"></textarea>                                      
                      </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<button onclick="javascript:demoFromHTML();">Generate Invoice</button>
@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
    <script>
        function demoFromHTML() {
            var pdf = new jsPDF('p', 'pt', 'letter');
            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            source = $('#details')[0];

            // we support special element handlers. Register them with jQuery-style
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors
            // (class, of compound) at this time.
            specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true
                }
            };
            margins = {
                top: 80,
                bottom: 60,
                left: 40,
                width: 522
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source, // HTML string or DOM elem ref.
                margins.left, // x coord
                margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },

                function (dispose) {
                    // dispose: object with X, Y of the last line add to the PDF
                    //          this allow the insertion of new lines after html
                    pdf.save('Invoice.pdf');
                }, margins);
        }
    </script>

}